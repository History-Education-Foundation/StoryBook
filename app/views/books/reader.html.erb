<% content_for :header, @book.title %>
<style>
  .highlight-read {
    background: #fef08a;
    transition: background 0.25s;
  }
</style>

<!-- ✅ Fixed Back Button at top-left -->
<div class="fixed top-6 left-6 z-50">
  <%= link_to "← My Library", library_books_path, class: "rounded px-3 py-1 bg-gray-100 font-semibold hover:bg-gray-200 text-gray-900 shadow" %>
</div>

<div class="max-w-2xl mx-auto mt-10 bg-white p-8 rounded shadow">
  <div class="mb-6 flex flex-col sm:flex-row sm:items-center sm:justify-between">
    <div>
      <% ix = 1 %>
      <h1 class="text-3xl font-bold mb-2" data-read-ix="0"><%= @book.title %></h1>
      <% @chapters.each do |chapter| %>
        <div class="mt-10 chapter-read-block">
          <h2 class="text-2xl font-semibold mb-2 border-b pb-1" data-read-ix="<%= ix %>"><%= chapter.title %></h2>
          <% ix += 1 %>
          <div class="mb-2 text-gray-600"><%= simple_format(chapter.description) %></div>
          <% chapter.pages.order(:id).each do |page| %>
            <div class="my-6 p-6 bg-gray-50 rounded shadow-sm">
              <div class="text-base text-gray-800 whitespace-pre-line" data-read-ix="<%= ix %>"><%= page.content %></div>
            </div>
            <% ix += 1 %>
          <% end %>
        </div>
      <% end %>

      <!-- Floating audio controls at bottom-right -->
      <div class="fixed bottom-6 right-6 z-50 bg-white shadow-xl rounded-lg p-3 flex gap-2 border border-gray-200">
        <button id="play-audio" class="px-4 py-1 rounded bg-indigo-600 text-white font-semibold hover:bg-indigo-700">Listen</button>
        <button id="pause-audio" class="px-4 py-1 rounded bg-gray-400 text-white font-semibold hover:bg-gray-500">Pause</button>
        <button id="stop-audio" class="px-4 py-1 rounded bg-red-500 text-white font-semibold hover:bg-red-700">Stop</button>
      </div>

      <div class="text-xs text-gray-500 mb-1">
        Reading Level: <%= @book.reading_level.presence || 'n/a' %>
      </div>
      <div class="text-xs text-gray-500 mb-3">
        Status: <%= @book.status %>
      </div>
      <div class="text-gray-700 text-sm mb-4">
        <%= simple_format(@book.learning_outcome) %>
      </div>
    </div>
  </div>
</div>

<!-- ✅ Single script block -->
<script>
var utterances = [];
var currentUtteranceIndex = 0;
var isPaused = false;

function collectBookText() {
  const blocks = [];
  if (document.querySelector('h1')) {
    blocks.push(document.querySelector('h1').innerText);
  }
  document.querySelectorAll('.chapter-read-block').forEach(chapterBlock => {
    if (chapterBlock.querySelector('h2')) {
      blocks.push(chapterBlock.querySelector('h2').innerText);
    }
    chapterBlock.querySelectorAll('.whitespace-pre-line').forEach(page => 
      blocks.push(page.innerText)
    );
  });
  return blocks;
}

function initSpeechSynthesis() {
  const textBlocks = collectBookText();
  utterances = textBlocks.map(text => new window.SpeechSynthesisUtterance(text));
  currentUtteranceIndex = 0;
}

function playBook() {
  if (speechSynthesis.speaking && isPaused) {
    speechSynthesis.resume();
    isPaused = false;
    return;
  }
  if (!speechSynthesis.speaking) {
    initSpeechSynthesis();
    speakBlock(0);
  }
}

function highlightReadingBlock(index) {
  document.querySelectorAll('[data-read-ix]').forEach(el => 
    el.classList.remove('highlight-read')
  );
  var el = document.querySelector('[data-read-ix="' + index + '"]');
  if (el) {
    el.classList.add('highlight-read');
    el.scrollIntoView({ behavior: 'smooth', block: 'center' });
  }
}

function speakBlock(index) {
  if (index >= utterances.length) return;
  currentUtteranceIndex = index;
  highlightReadingBlock(index);
  let u = utterances[index];
  u.onend = function() { speakBlock(index + 1); };
  speechSynthesis.speak(u);
}

function pauseBook() {
  if (speechSynthesis.speaking) {
    speechSynthesis.pause();
    isPaused = true;
  }
}

function stopBook() {
  speechSynthesis.cancel();
  isPaused = false;
}

function attachAudioEvents() {
  document.getElementById('play-audio').onclick = playBook;
  document.getElementById('pause-audio').onclick = pauseBook;
  document.getElementById('stop-audio').onclick = stopBook;
}

if (window.Turbo) {
  document.addEventListener('turbo:load', attachAudioEvents);
} else {
  document.addEventListener('DOMContentLoaded', attachAudioEvents);
}
</script>