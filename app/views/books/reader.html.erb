<% content_for :header, @book.title %>
<style>
  .highlight-read { background: #fef08a; transition: background 0.25s; }
</style>

<div class="fixed top-6 left-6 z-50">
  <%= link_to "← My Library", library_books_path, class: "rounded px-3 py-1 bg-gray-100 font-semibold hover:bg-gray-200 text-gray-900 shadow" %>
</div>

<div class="max-w-2xl mx-auto mt-10 bg-white p-8 rounded shadow">
  <div class="mb-6 flex flex-col sm:flex-row sm:items-center sm:justify-between">
    <div>
      <% ix = 1 %>
      <h1 class="text-3xl font-bold mb-2" data-read-ix="0"><%= @book.title %></h1>

      <% @chapters.each do |chapter| %>
        <div class="mt-10 chapter-read-block">
          <h2 class="text-2xl font-semibold mb-2 border-b pb-1" data-read-ix="<%= ix %>"><%= chapter.title %></h2>
          <% ix += 1 %>

          <div class="mb-2 text-gray-600"><%= simple_format(chapter.description) %></div>

          <% chapter.pages.order(:id).each do |page| %>
            <div class="my-6 p-6 bg-gray-50 rounded shadow-sm">
              <% if page.image.attached? %>
                <div class="flex justify-center mb-4">
                  <%= image_tag url_for(page.image),
                        class: "rounded shadow max-h-80 object-contain",
                        loading: "lazy",
                        alt: "" %>
                </div>
              <% end %>

              <div class="text-base text-gray-800 whitespace-pre-line" data-read-ix="<%= ix %>">
                <%= page.content %>
              </div>
            </div>
            <% ix += 1 %>
          <% end %>
        </div>
      <% end %>

      <div class="fixed bottom-6 right-6 z-50 bg-white shadow-xl rounded-lg p-3 flex gap-2 border border-gray-200">
        <button id="play-audio" class="px-4 py-1 rounded bg-indigo-600 text-white font-semibold hover:bg-indigo-700">Listen</button>
        <div id="audio-loading" class="hidden ml-2 flex items-center gap-1 text-indigo-600 text-sm"><span class="loader inline-block"></span> Generating audio...</div>
        <audio id="audio-player" class="hidden mt-3" controls style="width:200px"></audio>
      </div>

      <div class="text-xs text-gray-500 mb-1">
        Reading Level: <%= @book.reading_level.presence || 'n/a' %>
      </div>
      <div class="text-xs text-gray-500 mb-3">
        Status: <%= @book.status %>
      </div>
      <div class="text-gray-700 text-sm mb-4">
        <%= simple_format(@book.learning_outcome) %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const playButton = document.getElementById('play-audio');
  const loading = document.getElementById('audio-loading');
  const audioPlayer = document.getElementById('audio-player');

  if (!playButton) return;

  playButton.onclick = async function() {
    loading.classList.remove('hidden');
    audioPlayer.classList.add('hidden');
    audioPlayer.src = '';

    try {
      const resp = await fetch(window.location.pathname.replace(/\/read$/, "/generate_audio"), {
        method: 'POST',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        }
      });
      if (!resp.ok) throw new Error('Failed to generate audio');
      const blob = await resp.blob();
      audioPlayer.src = URL.createObjectURL(blob);
      audioPlayer.classList.remove('hidden');
      audioPlayer.play();
    } catch (err) {
      alert('Audio generation failed: ' + err.message);
    } finally {
      loading.classList.add('hidden');
    }
  }
});
</script>
<style>
.loader {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #6366f1;
  border-radius: 50%;
  width: 18px;
  height: 18px;
  animation: spin 1s linear infinite;
  display: inline-block;
  vertical-align: middle;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>